"""Unified portions table

Revision ID: eb3d545c4cc1
Revises: 
Create Date: 2025-07-18 10:22:36.895925

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'eb3d545c4cc1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercise_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('met_value', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('measurement_system', sa.String(length=10), nullable=False),
    sa.Column('height_cm', sa.Float(), nullable=True),
    sa.Column('navbar_preference', sa.String(length=50), nullable=True),
    sa.Column('diary_default_view', sa.String(length=10), nullable=True),
    sa.Column('theme_preference', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('check_ins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('checkin_date', sa.Date(), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('body_fat_percentage', sa.Float(), nullable=True),
    sa.Column('waist_cm', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercise_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('log_date', sa.Date(), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('manual_description', sa.String(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('calories_burned', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['exercise_activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friendships',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('requester_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('requester_id', 'receiver_id', name='uq_friendship')
    )
    op.create_table('my_foods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('food_category_id', sa.Integer(), nullable=True),
    sa.Column('ingredients', sa.Text(), nullable=True),
    sa.Column('fdc_id', sa.Integer(), nullable=True),
    sa.Column('upc', sa.String(), nullable=True),
    sa.Column('calories_per_100g', sa.Float(), nullable=False),
    sa.Column('protein_per_100g', sa.Float(), nullable=False),
    sa.Column('carbs_per_100g', sa.Float(), nullable=False),
    sa.Column('fat_per_100g', sa.Float(), nullable=False),
    sa.Column('saturated_fat_per_100g', sa.Float(), nullable=False),
    sa.Column('trans_fat_per_100g', sa.Float(), nullable=False),
    sa.Column('cholesterol_mg_per_100g', sa.Float(), nullable=False),
    sa.Column('sodium_mg_per_100g', sa.Float(), nullable=False),
    sa.Column('fiber_per_100g', sa.Float(), nullable=False),
    sa.Column('sugars_per_100g', sa.Float(), nullable=False),
    sa.Column('vitamin_d_mcg_per_100g', sa.Float(), nullable=False),
    sa.Column('calcium_mg_per_100g', sa.Float(), nullable=False),
    sa.Column('iron_mg_per_100g', sa.Float(), nullable=False),
    sa.Column('potassium_mg_per_100g', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['food_category_id'], ['food_category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('my_meals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('food_category_id', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('servings', sa.Float(), nullable=True),
    sa.Column('upc', sa.String(), nullable=True),
    sa.Column('calories_per_100g', sa.Float(), nullable=False),
    sa.Column('protein_per_100g', sa.Float(), nullable=False),
    sa.Column('carbs_per_100g', sa.Float(), nullable=False),
    sa.Column('fat_per_100g', sa.Float(), nullable=False),
    sa.Column('saturated_fat_per_100g', sa.Float(), nullable=False),
    sa.Column('trans_fat_per_100g', sa.Float(), nullable=False),
    sa.Column('cholesterol_mg_per_100g', sa.Float(), nullable=False),
    sa.Column('sodium_mg_per_100g', sa.Float(), nullable=False),
    sa.Column('fiber_per_100g', sa.Float(), nullable=False),
    sa.Column('sugars_per_100g', sa.Float(), nullable=False),
    sa.Column('vitamin_d_mcg_per_100g', sa.Float(), nullable=False),
    sa.Column('calcium_mg_per_100g', sa.Float(), nullable=False),
    sa.Column('iron_mg_per_100g', sa.Float(), nullable=False),
    sa.Column('potassium_mg_per_100g', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['food_category_id'], ['food_category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recipes_is_public'), ['is_public'], unique=False)

    op.create_table('user_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('fat', sa.Float(), nullable=True),
    sa.Column('calories_burned_goal_weekly', sa.Integer(), nullable=True),
    sa.Column('exercises_per_week_goal', sa.Integer(), nullable=True),
    sa.Column('minutes_per_exercise_goal', sa.Integer(), nullable=True),
    sa.Column('weight_goal_kg', sa.Float(), nullable=True),
    sa.Column('body_fat_percentage_goal', sa.Float(), nullable=True),
    sa.Column('waist_cm_goal', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('portions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('my_food_id', sa.Integer(), nullable=True),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('fdc_id', sa.Integer(), nullable=True),
    sa.Column('seq_num', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('measure_unit_description', sa.String(), nullable=True),
    sa.Column('portion_description', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('gram_weight', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['my_food_id'], ['my_foods.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('portions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_portions_fdc_id'), ['fdc_id'], unique=False)

    op.create_table('daily_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('log_date', sa.Date(), nullable=False),
    sa.Column('meal_name', sa.String(), nullable=True),
    sa.Column('fdc_id', sa.Integer(), nullable=True),
    sa.Column('my_food_id', sa.Integer(), nullable=True),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('amount_grams', sa.Float(), nullable=True),
    sa.Column('serving_type', sa.String(length=50), nullable=True),
    sa.Column('portion_id_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['my_food_id'], ['my_foods.id'], ),
    sa.ForeignKeyConstraint(['portion_id_fk'], ['portions.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('my_meal_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('my_meal_id', sa.Integer(), nullable=False),
    sa.Column('fdc_id', sa.Integer(), nullable=True),
    sa.Column('my_food_id', sa.Integer(), nullable=True),
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('amount_grams', sa.Float(), nullable=True),
    sa.Column('serving_type', sa.String(length=50), nullable=True),
    sa.Column('portion_id_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['my_food_id'], ['my_foods.id'], ),
    sa.ForeignKeyConstraint(['my_meal_id'], ['my_meals.id'], ),
    sa.ForeignKeyConstraint(['portion_id_fk'], ['portions.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipe_ingredients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('fdc_id', sa.Integer(), nullable=True),
    sa.Column('my_food_id', sa.Integer(), nullable=True),
    sa.Column('recipe_id_link', sa.Integer(), nullable=True),
    sa.Column('amount_grams', sa.Float(), nullable=True),
    sa.Column('serving_type', sa.String(length=50), nullable=True),
    sa.Column('portion_id_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['my_food_id'], ['my_foods.id'], ),
    sa.ForeignKeyConstraint(['portion_id_fk'], ['portions.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.ForeignKeyConstraint(['recipe_id_link'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipe_ingredients')
    op.drop_table('my_meal_items')
    op.drop_table('daily_logs')
    with op.batch_alter_table('portions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_portions_fdc_id'))

    op.drop_table('portions')
    op.drop_table('user_goals')
    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recipes_is_public'))

    op.drop_table('recipes')
    op.drop_table('my_meals')
    op.drop_table('my_foods')
    op.drop_table('friendships')
    op.drop_table('exercise_logs')
    op.drop_table('check_ins')
    op.drop_table('users')
    op.drop_table('system_settings')
    op.drop_table('food_category')
    op.drop_table('exercise_activities')
    # ### end Alembic commands ###
